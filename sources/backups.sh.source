#!/bin/sh
# tadaen sylvermane | jason gibson
# various backup functions

# begin source #

desktop_home_dir_func() {
	if [ ! -z "$POOLLOC" ] ; then
		TARGET="$POOLLOC"/backups/homebackups
		if [ "$USER" = root ] ; then
			HOSTNAME=$(uname -n)
			for user in /home/* ; do
				BUSER=$(basename "$user")
				if [ ! -d "$TARGET"/"$HOSTNAME"/"$BUSER}" ] ; then
					mkdir -p "$TARGET"/"$HOSTNAME"/"$BUSER" && chown -R \
					"$BUSER":"$BUSER" "$TARGET"/"$HOSTNAME"/"$BUSER"
				fi
				su -c "duplicity \
				--exclude-if-present .nobackup \
				--no-encryption \
				--full-if-older-than 1M \
				/home/${BUSER} file://${TARGET}/${HOSTNAME}/${BUSER}" "$BUSER"
				su -c \
				"duplicity remove-all-but-n-full 4 --force \
				file://${TARGET}/${HOSTNAME}/${BUSER}" "$BUSER"
			done
		else
			lsblk | head -n 2 | grep ltsp && HOSTNAME=server || HOSTNAME=$(uname -n)
			RESTFOLDER=/home/"$USER"/Desktop/RESTORE_DELETE_ASAP
			duplicity \
			--no-encryption \
			--progress \
			file://"$TARGET"/"$HOSTNAME"/"$USER"/ "$RESTFOLDER"
			touch "$RESTFOLDER"/.nobackup
		fi
	fi
}

sql_backup_func() {
	if [ ! -z "$POOLLOC" ] ; then
		for sqldocker in "$@" ; do
			SQLBACKUPS="$POOLLOC"/backups/mysqldump
			case "$SCRIPTCALL" in
				sqlbackup)
					for db in $(docker exec -t "$sqldocker" mysql -e "show databases;" \
					| awk '{print $2}') ; do
						case "$db" in
							Database|information_schema|mysql|performance_schema)
								continue
								;;
							*)
								[ -d "$SQLBACKUPS"/"$sqldocker"/"$db" ] \
								|| mkdir -p "$SQLBACKUPS"/"$sqldocker"/"$db"
								docker exec -t "$sqldocker" mysqldump \
									--user=backup \
									--password=backup \
									--single-transaction "$db" \
								| gzip > "$SQLBACKUPS"/"$sqldocker"/"$db"/"$db"."$NOW".sql.gz
								;;
						esac
					done
					[ -d "$SQLBACKUPS"/"$sqldocker"/users ] \
					|| mkdir -p "$SQLBACKUPS"/"$sqldocker"/users
					docker exec -t "$sqldocker" mysql -BNe \
					"select concat('\'',user,'\'@\'',host,'\'') from mysql.user where user \
					!= 'root'" | while read uh ; do 
						docker exec -t "$sqldocker" mysql -BNe "show grants for $uh" \
						| sed 's/$/;/; s/\\\\/\\/g'; \
					done | gzip > "$SQLBACKUPS"/"$sqldocker"/users/users."$NOW".sql.gz
					find "$SQLBACKUPS"/"$sqldocker"/ -name '*.sql.gz' -mtime +2 -exec rm {} \;
					;;
				sqlrestore)
					for db in $(find "$SQLBACKUPS"/"$sqldocker"/ -maxdepth 1 -mindepth 1 -type d) ; do
						DBNAME=$(basename "$db")
						docker exec -i "$sqldocker" mysql -e "create database ${DBNAME};"
						zcat $(find "$db"/ -name '*.sql.gz' | sort -n | tail -n 1) \
						| docker exec -i "$sqldocker" mysql "$DBNAME"
					done
					;;
			esac
		done
	fi
}

# end source #
