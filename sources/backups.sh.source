#!/bin/sh
# tadaen sylvermane | jason gibson
# various backup functions

# begin source #

desktop_home_dir_func() {
	if [ ! -z "$POOLLOC" ] ; then
		TARGET="$POOLLOC"/backups/homebackups
		if [ "$USER" = root ] ; then
			HOSTNAME=$(uname -n)
			for user in /home/* ; do
				BUSER=$(basename "$user")
				if [ ! -d "$TARGET"/"$HOSTNAME"/"$BUSER}" ] ; then
					mkdir -p "$TARGET"/"$HOSTNAME"/"$BUSER" && chown -R \
					"$BUSER":"$BUSER" "$TARGET"/"$HOSTNAME"/"$BUSER"
				fi
				su -c "duplicity \
				--exclude-if-present .nobackup \
				--no-encryption \
				--full-if-older-than 1M \
				/home/${BUSER} file://${TARGET}/${HOSTNAME}/${BUSER}" "$BUSER"
				su -c \
				"duplicity remove-all-but-n-full 4 --force \
				file://${TARGET}/${HOSTNAME}/${BUSER}" "$BUSER"
			done
		else
			lsblk | head -n 2 | grep ltsp && HOSTNAME=server || HOSTNAME=$(uname -n)
			RESTFOLDER=/home/"$USER"/Desktop/RESTORE_DELETE_ASAP
			duplicity \
			--no-encryption \
			--progress \
			file://"$TARGET"/"$HOSTNAME"/"$USER"/ "$RESTFOLDER"
			touch "$RESTFOLDER"/.nobackup
		fi
	fi
}

sql_backup_func() {
	if [ ! -z "$POOLLOC" ] ; then
		DCON=$(docker ps | grep 3306 | rev | awk '{print $1}' | rev)
		SQLBACKUPS="$POOLLOC"/backups/mysqldump
		case "$SCRIPTCALL" in
			sqlbackup)
				for db in $(docker exec -t "$DCON" mysql -e "show databases;" \
				| awk '{print $2}') ; do
					case "$db" in
						Database|information_schema|mysql|performance_schema)
							continue
							;;
						*)
							[ -d "$SQLBACKUPS"/"$db" ] || mkdir -p "$SQLBACKUPS"/"$db"
							docker exec -t "$DCON" mysqldump \
								--user=backup \
								--password=backup \
								--single-transaction "$db" \
							| gzip > "$SQLBACKUPS"/"$db"/"$db"."$NOW".sql.gz
							;;
					esac
				done
				[ -d "$SQLBACKUPS"/users ] || mkdir -p "$SQLBACKUPS"/users
				docker exec -t "$DCON" mysql -BNe \
				"select concat('\'',user,'\'@\'',host,'\'') from mysql.user where user \
				!= 'root'" | while read uh ; do 
					docker exec -t "$DCON" mysql -BNe "show grants for $uh" \
					| sed 's/$/;/; s/\\\\/\\/g'; \
				done | gzip > "$SQLBACKUPS"/users/users."$NOW".sql.gz
				find "$SQLBACKUPS"/ -name '*.sql.gz' -mtime +2 -exec rm {} \;
				;;
			sqlrestore)
				for db in $(find "$SQLBACKUPS"/ -maxdepth 1 -mindepth 1 -type d) ; do
					DBNAME=$(basename "$db")
					docker exec -i "$DCON" mysql -e "create database ${DBNAME};"
					zcat $(find "$db"/ -name '*.sql.gz' | sort -n | tail -n 1) \
					| docker exec -i "$DCON" mysql "$DBNAME"
				done
				;;
		esac
	fi
}

# end source #
