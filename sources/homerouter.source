#!/bin/sh
# tadaen sylvermane | jason gibson
# simple home router setup

# sources #

# https://gist.github.com/maprangzth/453373f3052a0bd7d77b8689ada4dc40
# https://www.systutorials.com/setting-up-gateway-using-iptables-and-route-on-linux/
# https://arstechnica.com/gadgets/2016/04/the-ars-guide-to-building-a-linux-router-from-scratch/

ROUTERVARS=/tmp/routerif.tmp

# functions #

interface_loop_func() {
	for interface in $(find /sys/class/net/ -maxdepth 1) ; do
		ifname=$(basename "$interface")
		ifip=$(ip addr | grep 'inet ' | grep "$ifname" | awk '{print $2}' \
		| cut -d\/ -f 1 | head -n 1)
		case "$ifname" in
			net|lo|virbr*|vnet*|veth*|docker*)
				continue
				;;
			*)
				"$@"
				;;
		esac
	done
}

interface_start_func() {
	if echo "$ifip" | grep -q "$1" ; then
		router_config_func "$1"
	else
		break
	fi
}

interface_iptables_func() {
	if [ ! -z "$ifip" ] ; then
		case "$ifip" in
			"$1".*)
				iptables -A INPUT -i "$ifname" -p tcp --dport 53 -j ACCEPT
				iptables -A INPUT -i "$ifname" -p udp --dport 53 -j ACCEPT
				iptables -A INPUT -i "$ifname" -p tcp --dport 22 -j ACCEPT
				iptables -A INPUT -i "$ifname" -p udp --dport 67 -j ACCEPT
				echo "${ifname} lan" >> "$ROUTERVARS"
				;;
			*)
				iptables -t nat -A POSTROUTING -o "$ifname" -j MASQUERADE
				echo "${ifname} wan" >> "$ROUTERVARS"
				;;
		esac
	fi
}

router_config_func() {
	if [ ! -f "$ROUTERVARS" ] ; then
		iptables -A INPUT -s 127.0.0.0/8 -d 127.0.0.0/8 -i lo -j ACCEPT
		iptables -A INPUT -p icmp -j ACCEPT
		iptables -A INPUT -m state --state ESTABLISHED -j ACCEPT
		iptables -A INPUT -p udp -m udp --dport 33434:33523 -j REJECT \
		--reject-with icmp-port-unreachable
		interface_loop_func interface_iptables_func "$1"
		lan_if=$(grep lan "$ROUTERVARS" | awk '{print $1}')
		iptables -A FORWARD -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
		iptables -A INPUT -j DROP
		for lan_if in $(grep lan "$ROUTERVARS" | awk '{print $1}') ; do
			for wan_if in $(grep wan "$ROUTERVARS" | awk '{print $1}') ; do
				iptables -A FORWARD -i "$lan_if" -o "$wan_if" -j ACCEPT
			done
		done
		iptables -A FORWARD -j DROP
		rm "$ROUTERVARS"
	fi
}

squid_config_func() {
	# still sorting this out. not sure if i need to put it somewhere else.
	# currently the redirect isn't working and everything times out
	iptables -N PROXY -t nat
	iptables -A PROXY -t nat -d 0.0.0.0/24 -j ACCEPT
	iptables -A PROXY -t nat -d 127.0.0.0/24 -j ACCEPT
	iptables -A PROXY -t nat -d 172.17.0.0/24 -j ACCEPT
	iptables -A PROXY -t nat -d 192.168.0.0/24 -j ACCEPT
	iptables -A PROXY -t nat -j RETURN
	iptables -A PREROUTING -t nat -p tcp --dport 80 -j PROXY
	iptables -A PREROUTING -t nat -p tcp --dport 80 -j REDIRECT --to-port 3129
	iptables -A PREROUTING -t nat -p tcp --dport 443 -j PROXY
	iptables -A PREROUTING -t nat -p tcp --dport 443 -j REDIRECT --to-ports 3130
}

if [ -f "$ROUTERVARS" ] ; then
	echo "configuration done"
	exit 0
else
	if [ -z "$1" ] ; then
		echo "usage: ${0} (subnet)"
		echo "example: ${0} 192.168.0"
		exit 0
	else
		until [ ! -z "$yesno" ] ; do
			read -r -p "${1} is your selected subnet. correct? -> " yesno
			case "$yesno" in
				y|yes|YES|Yes)
					interface_loop_func interface_start_func "$1"
					;;
				*)
					unset "$yesno"
					echo "must provide a valid subnet"
					;;
			esac
		done
	fi
fi

# end script #
